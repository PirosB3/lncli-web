// app/lightning.js
const grpc = require("grpc");
const fs = require("fs");
const logger = require("winston");
const debug = require("debug")("lncliweb:lightning");

// expose the routes to our app with module.exports
class LightningManager {

    getActiveClient() {
        if (!this.activeClient) {
            logger.info("Recreating active client");
            this.credentials = this.generateCredentials(this.lndCert, {macaroonPath: this.macaroonPath});
            this.activeClient = new this.lnrpcDescriptor.lnrpc.Lightning(this.lndHost, this.credentials);
        }
        return this.activeClient;
    }

    generateCredentials(lndCert, options) {
	let credentials = grpc.credentials.createSsl(lndCert);

        // If macaroon path was specified load credentials using macaroon metadata.
        if (options.macaroonPath) {
            if (fs.existsSync(options.macaroonPath)) {
                let macaroonCreds = grpc.credentials.createFromMetadataGenerator(function (args, callback) {
                    let adminMacaroon = fs.readFileSync(options.macaroonPath);
                    let metadata = new grpc.Metadata();
                    metadata.add("macaroon", adminMacaroon.toString("hex"));
                    callback(null, metadata);
                });
                credentials = grpc.credentials.combineChannelCredentials(credentials, macaroonCreds);
            } else {
                logger.error("The specified macaroon file "+ options.macaroonPath + " was not found.\n" + 
                             "Please add the missing lnd macaroon file or update/remove the path in the application configuration.");
                process.exit(1);
            }
        }

        return credentials;
    }

    constructor(protoPath, lndHost, lndCertPath, macaroonPath) {
        process.env.GRPC_SSL_CIPHER_SUITES = "HIGH+ECDSA";

	if (!fs.existsSync(lndCertPath)) {
            logger.error("Required lnd certificate path missing from application configuration.");
            process.exit(1);
        }

        // Define credentials for SSL certificate generated by LND, and active client
        this.lndHost = lndHost;
	this.lndCert = fs.readFileSync(lndCertPath);
        this.lnrpcDescriptor = grpc.load(protoPath);
	this.macaroonPath = macaroonPath;
        this.activeClient = null;
    }
}


module.exports = LightningManager;
